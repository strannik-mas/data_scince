df3 <- read.csv("/3/data/Indices.csv", sep="\t")
getwd()
df3 <- read.csv("./3/data/Indices.csv", sep="\t")
dat.cars <- read.csv('./3/data/mtcars.csv')
View(dat.cars)
dim(dat.cars)
View(dat.cars)
summary(dat.cars$hp)
str(dat.cars)
dat.cars$wt_kg <- dat.cars$wt * 0.45
dat.cars$wt_kg <- dat.cars$wt * 450
mg <- dat.cars[dat.cars$am == 1,]
View(mg)
cars2 <- dat.cars[dat.cars$gear > 4 & dat.cars$hp < 120,]
View(cars2)
nrow(mg)
nrow(cars2)
dat.cars$wt_kg <- dat.cars$wt * 1000 / 0.45
install.packages("tidyverse")
library(tidyverse)
devtools::install_github("r-lib/conflicted")
install.packages("devtools")
devtools::install_github("r-lib/conflicted")
conflicts_prefer(dplyr::filter)
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
rate <- read.csv('./3/data/Ratings.csv')
View(rate)
good <- rate %>% filter(PREP > 5, DECI > 8)
View(good)
bad.small <- rate %>% filter(FAMI <= 5.5, CFMG < 6) %>% select(PREP, CFMG, PHYS)
View(bad.small)
rate <- rate %>% mutate(MEAN_BAL = mean(ORAL, WRIT))
rate <- rate %>% mutate(MEAN_BAL = (ORAL + WRIT)/2)
library(tidyverse)
tit <- read.csv('./3/data/Titanic.csv')
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
str(tit)
tit <- na.omit(tit)
tit <- na.omit(tit)
View(tit)
tit %>% group_by(sex) %>% summarise(m_age = mean(age))
tit %>% group_by(pclass) %>% summarise(count = n())
tit %>% group_by(pclass) %>% filter(sex == 'male') %>% summarise(male_count = n())
tit %>% group_by(pclass) %>% filter(sex == 'female') %>% summarise(female_count = n())
tit %>% group_by(pclass) %>% summarise(male_count = sum(Feemale))
tit %>% group_by(pclass) %>% summarise(male_count = sum(feemale))
tit %>% group_by(pclass) %>% summarise(male_count = sum(Female))
View(rate)
tit <- tit %>% mutate(Female = sex == 'female')
tit %>% group_by(pclass) %>% summarise(n_female = sum(Female), n_male = length(Female) - sum(Female))
tit %>% group_by(pclass) %>% summarise(n_female = sum(Female) * 100/ length(Female), n_male = (length(Female) - sum(Female)) * 100 / length(Female))
getwd()
dat.cars <- read.csv('./3/data/mtcars.csv')
dim(dat.cars)
str(dat.cars)
summary(dat.cars$hp)
dat.cars$wt_kg <- dat.cars$wt * 1000 / 0.45
mg <- dat.cars[dat.cars$am == 1,]
View(mg)
cars2 <- dat.cars[dat.cars$gear > 4 & dat.cars$hp < 120,]
View(cars2)
nrow(mg)
nrow(cars2)
install.packages("tidyverse")
library(tidyverse)
install.packages("devtools")
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
rate <- read.csv('./3/data/Ratings.csv')
good <- rate %>% filter(PREP > 5, DECI > 8)
View(good)
bad.small <- rate %>% filter(FAMI <= 5.5, CFMG < 6) %>% select(PREP, CFMG, PHYS)
View(bad.small)
rate <- rate %>% mutate(MEAN_BAL = (ORAL + WRIT)/2)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
dat <- read.csv('./3/data/housing.csv', sep="\t")
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
head(dat)
tail(dat)
summary(dat)
dmedv = max(dat$MEDV) - min(dat$MEDV)
dat$MEDV_N <- dat$MEDV * 1000
small <- dat[dat$MEDV_N > 40000 & dat$MEDV_N < 50000,]
nrow(small)
dat <- dat %>% mutate(MEDV_LOG = log(MEDV))
dat %>% filter(LSTAT > 30) %>% View
hist(dat$LSTAT, main = "LSTAT", col = "darkred", xlab="low money")
View(dat)
dev.copy(png, './3/hist.png')
hist(dat$LSTAT, main = "LSTAT", col = "darkred", xlab="low money")
dev.off()
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram()
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(bindwidth=4)
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(bindwidth=2)
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(binwidth=2)
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(binwidth=2, fill="skyblue", color="navy")
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(binwidth=2, fill="skyblue", color="navy") +
labs(title = "lsat znacheniya procenty", xlab="velichina LSAT", ylab="procenty LSAT")
dev.copy(png, './3/hist-ggplot.png')
ggplot(data=dat, aes(x=LSTAT)) + geom_histogram(binwidth=2, fill="skyblue", color="navy") +
labs(title = "lsat znacheniya procenty", xlab="velichina LSAT", ylab="procenty LSAT")
dev.off()
library(tidyverse)
dat <- read.csv('./3/data/flats.csv', sep="\t")
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
View(dat)
dat <- read.csv('./3/data/flats.csv')
View(dat)
library(tidyverse)
tit <- read.csv('./3/data/Titanic.csv')
library(conflicted)
library(dplyr)
conflicts_prefer(dplyr::filter)
str(tit)
tit <- na.omit(tit)
tit %>% group_by(sex) %>% summarise(m_age = mean(age))
dat %>% group_by(brick) %>% View
dat %>% group_by(brick) %>% summarise(c_brick = count(brick))
dat %>% group_by(brick) %>% summarise(n_brick = sum(brick), without_brick = length(brick) - sum(brick))
dat %>% group_by(brick) %>% summarise(m_price = mean(price))
ggplot(data=dat, aes(x=price)) + geom_histogram(binwidth = 4) + facet_wrap(walk)
rlang::last_trace()
ggplot(data=dat, aes(x=price)) + geom_histogram(binwidth = 4, fill="skyblue") + facet_wrap(walk)
ggplot(data=dat, aes(x=price)) + geom_histogram(binwidth = 4, fill="skyblue") + facet_wrap(~walk)
ggplot(data=dat, aes(x=totsp, y=price, size=kitsp, color=walk)) + geom_point()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
install.packages("shiny")
library(shiny)
dat.cars <- read.csv('./3/data/mtcars.csv')
View(dat.cars)
hhh <- dat.cars[,5]
runApp('4/mtcars_shiny_hw')
shiny::runApp('4/mtcars_shiny_hw')
shiny::runApp('4/mtcars_shiny_hw')
shiny::runApp('4/mtcars_shiny_hw')
shiny::runApp('4/mtcars_shiny_hw')
shiny::runApp('4/mtcars_shiny_hw')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
install.packages("shiny")
library(shiny)
runApp('4/mtcars_shiny_hw')
runApp('4/mtcars_shiny_hw')
install.packages("shiny")
View(dat.cars)
runExample('01_hello')
runApp('4/mtcars_shiny_hw')
runApp('4/mtcars_shiny_hw')
runApp('4/mtcars_shiny_hw')
mtcars
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
library(tidyverse)
library(shiny)
View(diamonds)
View(diamonds)
runApp('4/diamonds_hw')
runApp('4/diamonds_hw')
runApp('4/diamonds_hw')
runApp('4/diamonds_hw')
library(shiny)
tit <- read.csv('./4/titanic_hw/data/Titanic.csv')
View(tit)
library(shiny)
tit <- read.csv('./4/titanic_hw/data/Titanic.csv')
shiny::runApp('4/titanic_hw')
runApp('4/titanic_hw')
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    https://shiny.posit.co/
#
#c:\Users\Admin\Documents\data_scince\5 Data Scientist. Аналитика. Средний уровень\4\titanic_hw\data\Titanic.csv
library(shiny)
tit <- read.csv('./4/titanic_hw/data/Titanic.csv')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
runApp('4/titanic_hw')
install.packages("DescTools")
library(DescTools)
BinomCI(60, 100, conf.level = 0.95)
BinomCI(80, 100, conf.level = 0.95)
ages <- c(23, 24, 34, 33, 38)
MeanCI(ages, conf.level = 0.95)
getwd()
dat <- read.csv('./5/data/experiment.csv')
View(dat)
dim(dat)
nrow(dat)
n = nrow(dat)
str(dat)
p = sum(dat$test)
BinomCI(p, n, conf.level = 0.90)
pc = sum(dat$control)
BinomCI(pc, n, conf.level = 0.90)
dat <- read.csv('./6/data/conversion.csv')
N <- 1500
differences <- rep(NA, N)
View(dat)
N <- 1500
differences <- rep(NA, N)
for(i in 1:N){
s1 <- sample(dat$OLD, replace = TRUE)
s2 <- sample(dat$NEW, replace = TRUE)
p1 <- sum(s1)/length(s1)
p2 <- sum(s1)/length(s2)
p_diff <- p2 - p1
differences[i] <- p_diff
}
N <- 1500
differences <- rep(NA, N)
for(i in 1:N){
s1 <- sample(dat$OLD, replace = TRUE)
s2 <- sample(dat$NEW, replace = TRUE)
p1 <- sum(s1)/length(s1)
p2 <- sum(s2)/length(s2)
p_diff <- p2 - p1
differences[i] <- p_diff
}
conv <- read.csv('./6/data/conversion.csv')
p_old = mean(conv$OLD)
p_new = mean(conv$NEW)
p_new - p_old
N <- 1500
set.seed(12)  #стартовая точка чтобы были одинаковые псевдо-рандомные значения
differences <- rep(NA, N)
for(i in 1:N){
s1 <- sample(conv$OLD, replace = TRUE)
s2 <- sample(conv$NEW, replace = TRUE)
p1 <- sum(s1)/length(s1)
p2 <- sum(s2)/length(s2)
p_diff <- p2 - p1
differences[i] <- p_diff
}
library(tidyverse)
diff_df = data.frame(dif = differences)
View(diff_df)
ggplot(data=diff_df, aes(x=dif)) + geom_histogram(fill = 'lightblue')
ggplot(data=diff_df, aes(x=dif)) + geom_histogram(fill = 'lightblue', color='navy')
ggplot(data=diff_df, aes(x=dif)) + geom_histogram(fill = 'lightblue', color='navy') +
geom_vline(xintercept = 0.6325, color='red', lty=2)
differences_center <- differences - mean(differences)
differences_center <- differences - mean(differences)
diff_df$dif_cent <- differences_center
ggplot(data=diff_df, aes(x=dif_cent)) + geom_histogram(fill = 'lightblue', color='navy') +
geom_vline(xintercept = 0.6325, color='red', lty=2)
sum((differences - mean(differences)) > 0.6325)
pval = p_new - p_old
pval = sum(differences_center > 0.6325)
conv <- read.csv('./6/data/conversion.csv')
ns1 <- sum(conv$OLD)
ns2 <- sum(conv$NEW)
nTotal1 <- length(conv$OLD)
nTotal2 <- length(conv$NEW)
prop.test(c(ns1, ns2), c(nTotal1, nTotal2))
prop.test(c(ns1, ns2), c(nTotal1, nTotal2), alternative = "greater")
prop.test(c(ns1, ns2), c(nTotal1, nTotal2))
conv <- read.csv('./6/data/conversion.csv')
ns1 <- sum(conv$OLD)
ns2 <- sum(conv$NEW)
nTotal1 <- length(conv$OLD)
nTotal2 <- length(conv$NEW)
prop.test(c(ns1, ns2), c(nTotal1, nTotal2))
View(conv)
prop.test(c(ns1, ns2), c(nTotal1, nTotal2), alternative = "less")
prop.test(c(ns1, ns2), c(nTotal1, nTotal2), alternative = "greater")
dat <- read.csv('./6/data/parfume.csv')
dat.filter = dat[dat$vote < 2,]
t <- table(dat.filter$vote)
barplot(table(dat.filter[, vote]))
barplot(table(dat.filter[, 6]))
barplot(table(contr[, 6]), main="Control", ylab="Count")
contr <- dat.filter[dat.filter$group == "control"]
contr <- dat.filter[dat.filter$group == "control",]
test <- dat.filter[dat.filter$group == "test",]
barplot(table(contr[, 6]), main="Control", ylab="Count")
barplot(table(test[, 6]), col = "red", main="Test", ylab="Count")
contr_df <- dat.filter[dat.filter$group == "control",]
test_df <- dat.filter[dat.filter$group == "test",]
barplot(table(contr_df[, 6]), main="Control", ylab="Count")
barplot(table(test_df[, 6]), col = "red", main="Test", ylab="Count")
test <- test_df$vote
control <- contr_df$vote
N <- 1000
set.seed(123)
for(i in 1:N){
s1 <- sample(control, replace = TRUE)
s2 <- sample(test, replace = TRUE)
p1 <- sum(s1)/length(s1)
p2 <- sum(s2)/length(s2)
p_diff <- p2 - p1
differences[i] <- p_diff
}
N <- 1000
set.seed(123)
differences <- rep(NA, N)
for(i in 1:N){
s1 <- sample(control, replace = TRUE)
s2 <- sample(test, replace = TRUE)
p1 <- sum(s1)/length(s1)
p2 <- sum(s2)/length(s2)
p_diff <- p2 - p1
differences[i] <- p_diff
}
library(tidyverse)
diff_df = data.frame(dif = differences)
diff_df = data.frame(dif = differences)
differences_center <- differences - mean(differences)
diff_df$dif_cent <- differences_center
p_old = mean(control)
p_new = mean(test)
p_razn = p_new - p_old
pval = sum(differences_center > p_razn)
